{"by":"klodolph","id":17592746,"kids":[17592873,17597241,17593780,17593185,17593696,17594579,17595090,17594370,17600536,17597825,17595335,17593649],"parent":17592422,"text":"For those interested, I recommend reading how FIDO U2F works. There&#x27;s more in a security key than just FIDO U2F, but FIDO U2F is easily the most ergonomic system that these security keys support. Simplified:<p>* The hardware basically consists of a secure microprocessor, a counter which it can increment, and a secret key.<p>* For each website, e.g., GitHub, it creates a HMAC-SHA256 of the domain (www.github.com) and the secret key, and uses this to generate a public&#x2F;private keypair. This is used to authenticate.<p>* To authenticate, the server sends a challenge, and the security key sends a response which validates that it has the private key. It also sends the nonce, which it increments.<p>If you get phished, the browser would send a different domain (www.github.com.suspiciousdomain.xx) to the security key and authentication would fail. If you somehow managed to clone the security key, services would notice that your nonces are no longer monotonically increasing and you could at least detect that it&#x27;s been cloned.<p>I&#x27;m excited about the use of FIDO U2F becoming more widespread, for now all I use it for is GitHub and GMail. The basic threat model is that someone gets network access to your machine (but they can&#x27;t get credentials from the security key, because you have to touch it to make it work) or someone sends you to a phishing website but you access it from a machine that you trust.","time":1532354044,"type":"comment"}